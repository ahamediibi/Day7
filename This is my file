# Day7

Day 06 :OOPS TASK 

1, https://github.com/rvsp/typescript-oops/blob/master/Practice/Movie.md
2, https://github.com/rvsp/typescript-oops/blob/master/Practice/class-circle.md
3, Write a “person” class to hold all the details.
4, write a class to calculate the uber price.

1,Practice/Movie:

Question: Implement a Movie class with properties and methods related to movies.
Answer: The answer can be found in the provided GitHub link: Practice/Movie

2,Practice/Class Circle:

Question: Create a Circle class and implement various methods for circle operations.
Answer: The answer can be found in the provided GitHub link: Practice/Class Circle

3,Write a "person" class to hold all the details:

Question: Implement a Person class to store and manage details of a person.
Answer: The implementation of the Person class will depend on the specific details and requirements you want to include. Here's a basic 

example:

class Person {
  constructor(name, age, city) {
    this.name = name;
    this.age = age;
    this.city = city;
  }

  getInfo() {
    return `Name: ${this.name}, Age: ${this.age}, City: ${this.city}`;
  }
}

// Usage
const person = new Person("John Doe", 25, "New York");
console.log(person.getInfo());


4,Write a class to calculate the Uber price:

Question: Implement a class to calculate the price for an Uber ride based on various factors.
Answer: The implementation of the UberPriceCalculator class will depend on the specific factors and pricing rules you want to consider.

Here's a basic example:

class UberPriceCalculator {
  constructor(distance, duration) {
    this.distance = distance;
    this.duration = duration;
  }

  calculatePrice() {
    // Perform calculations based on distance, duration, and other factors
    // Return the calculated price
  }
}

// Usage
const uberRide = new UberPriceCalculator(10, 30);
console.log(uberRide.calculatePrice());


